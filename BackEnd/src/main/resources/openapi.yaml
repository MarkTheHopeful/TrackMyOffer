openapi: 3.0.3
info:
  title: TrackMyOffer Backend API
  description: |
    This is the API specification for the TrackMyOffer backend service.
    The service provides endpoints for the web interface and communicates with the feature service.
  version: 0.0.1
  contact:
    name: TrackMyOffer Team
servers:
  - url: http://localhost:8080
    description: Local development server
paths:
  /v0/:
    get:
      summary: Root endpoint
      description: Returns a simple greeting message
      operationId: getRoot
      responses:
        '200':
          description: Successful operation
          content:
            text/plain:
              schema:
                type: string
                example: "Hello World!"
  /v0/hello:
    get:
      summary: Hello endpoint
      description: Returns a greeting with the request origin
      operationId: getHello
      responses:
        '200':
          description: Successful operation
          content:
            text/plain:
              schema:
                type: string
                example: "Hello, 0:0:0:0:0:0:0:1:52788"
  /features/v0/hello:
    get:
      summary: Feature hello endpoint
      description: Calls the feature provider service to get a greeting
      operationId: getFeatureHello
      parameters:
        - name: name
          in: query
          description: The name to include in the greeting.
          required: true
          schema:
            type: string
            example: "Mark Ipatov"
      responses:
        '200':
          description: Successful operation
          content:
            text/plain:
              schema:
                type: string
                example: "Hello from feature provider!"
        '400':
          description: Missing required query parameter "name"
          content:
            text/plain:
              schema:
                type: string
                example: "Missing query parameter: name"
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
                example: "Error calling feature provider"
  /features/v0/profile:
    post:
      summary: Feature profile endpoint
      description: >
        Requires a valid Google OAuth session.  
        Forwards profile data to the feature-provider service
      operationId: postFeatureProfile
      security:
        - googleOAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileRequest'
            example:
              first_name: "Mark"
              last_name: "Ipatov"
              email: "mark.ipatov@mipat.ov"
              city: "Bremen"
              education:
                - id: "1746992929396"
                  institution: "CUB"
                  degree: "Bachelor"
                  startDate: "2021-09-01"
                  endDate: "2024-08-31"
                  additionalInfo: "Transfer student"
              linkedin_url: ""
              github_url: ""
              personal_website: ""
              other_url: ""
              about_me: ""
              phone: "+4910000000000"
              state: "Bremen"
              country: "Germany"
      responses:
        '200':
          description: Successful operation
          content:
            text/plain:
              schema:
                type: string
                example: "OK"
        '400':
          description: Bad request (e.g. malformed JSON)
          content:
            text/plain:
              schema:
                type: string
                example: "Invalid request payload"
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
                example: "Error calling feature provider"
        '302':
          description: Redirect to login on expired or missing session
          headers:
            Location:
              description: Login URL
              schema:
                type: string
          content: { }
  /features/v0/match-position:
    get:
      summary: Match position endpoint
      description: Analyzes a job description and returns matching information
      operationId: matchPosition
      parameters:
        - name: jobDescriptionLink
          in: query
          description: URL link to the job description to analyze
          required: true
          schema:
            type: string
            format: uri
            example: "https://example.com/job-posting"
        - name: profileId
          in: query
          description: ID of the user profile
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                description: Job matching analysis result
        '400':
          description: Missing required query parameter
          content:
            text/plain:
              schema:
                type: string
                example: "Missing jobDescriptionLink parameter"
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
                example: "Error processing job description"
  /features/v0/build-cv:
    get:
      summary: Build CV endpoint
      description: Generates a customized CV based on a job description
      operationId: buildCV
      parameters:
        - name: jobDescriptionLink
          in: query
          description: URL link to the job description to analyze
          required: true
          schema:
            type: string
            format: uri
            example: "https://example.com/job-posting"
        - name: profileId
          in: query
          description: ID of the user profile
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                description: Generated CV content
        '400':
          description: Missing required query parameter
          content:
            text/plain:
              schema:
                type: string
                example: "Missing jobDescriptionLink parameter"
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
                example: "Error generating CV"
  /features/v0/generate-motivational-letter:
    get:
      summary: Generate motivational letter endpoint
      description: Creates a customized motivational letter based on a job description
      operationId: generateMotivationalLetter
      parameters:
        - name: jobDescriptionLink
          in: query
          description: URL link to the job description to analyze
          required: true
          schema:
            type: string
            format: uri
            example: "https://example.com/job-posting"
        - name: textStyle
          in: query
          description: Style preference for the motivational letter
          required: false
          schema:
            type: string
            example: "professional"
        - name: notes
          in: query
          description: Additional notes to include in the letter
          required: false
          schema:
            type: string
            example: "Please emphasize my leadership skills"
        - name: profileId
          in: query
          description: ID of the user profile
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                description: Generated motivational letter content
        '400':
          description: Missing required query parameter
          content:
            text/plain:
              schema:
                type: string
                example: "Missing jobDescriptionLink parameter"
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
                example: "Error generating motivational letter"
components:
  schemas:
    EducationEntry:
      type: object
      properties:
        id:
          type: string
          example: "1746992929396"
        institution:
          type: string
          example: "CUB"
        degree:
          type: string
          example: "Bachelor"
        startDate:
          type: string
          format: date
          example: "2021-09-01"
        endDate:
          type: string
          format: date
          example: "2024-08-31"
        additionalInfo:
          type: string
          nullable: true
          example: "Transfer student"
      required:
        - id
        - institution
        - degree
        - startDate
        - endDate

    ProfileRequest:
      type: object
      properties:
        first_name:
          type: string
          example: "Mark"
        last_name:
          type: string
          example: "Ipatov"
        user_id:
          type: integer
          example: 1
          nullable: true
          description: "Internal user id, supposed to be empty on request from frontend and to be filled by the backend"
        email:
          type: string
          format: email
          example: "mark.ipatov@mipat.ov"
        city:
          type: string
          example: "Bremen"
        education:
          type: array
          items:
            $ref: '#/components/schemas/EducationEntry'
        linkedin_url:
          type: string
          format: uri
          nullable: true
        github_url:
          type: string
          format: uri
          nullable: true
        personal_website:
          type: string
          format: uri
          nullable: true
        other_url:
          type: string
          format: uri
          nullable: true
        about_me:
          type: string
          nullable: true
        phone:
          type: string
          example: "+4910000000000"
        state:
          type: string
          example: "Bremen"
        country:
          type: string
          example: "Germany"
      required:
        - first_name
        - last_name
        - email
        - city
        - education
        - state
        - country
